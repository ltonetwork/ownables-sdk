{"version":3,"file":"ownable.js","mappings":"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","sources":["webpack://@ltonetwork/ownable-sdk/./node_modules/simple-iframe-rpc/lib/constants.js","webpack://@ltonetwork/ownable-sdk/./node_modules/simple-iframe-rpc/lib/listener.js","webpack://@ltonetwork/ownable-sdk/webpack/bootstrap","webpack://@ltonetwork/ownable-sdk/webpack/runtime/make namespace object","webpack://@ltonetwork/ownable-sdk/./src/ownable.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RESPONSE_TYPE = exports.CALL_TYPE = void 0;\nexports.CALL_TYPE = 'simple-iframe-rpc-call';\nexports.RESPONSE_TYPE = 'simple-iframe-rpc-response';\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"./constants\");\nclass Listener {\n    constructor(methods) {\n        this.methods = methods;\n    }\n    send(event, resultOrPromise) {\n        Promise.resolve(resultOrPromise)\n            .then(result => this.sendResult(event, result))\n            .catch(error => this.sendError(event, error));\n    }\n    sendResult(event, result) {\n        const { channel, id } = event.data;\n        const source = event.source || this.fallbackSource;\n        const targetOrigin = event.origin && event.origin !== \"null\" ? event.origin : \"*\";\n        source.postMessage({ '@rpc': constants_1.RESPONSE_TYPE, channel, id, result }, targetOrigin);\n    }\n    sendError(event, error) {\n        const { channel, id } = event.data;\n        const source = event.source || this.fallbackSource;\n        const targetOrigin = event.origin && event.origin !== \"null\" ? event.origin : \"*\";\n        source.postMessage({ '@rpc': constants_1.RESPONSE_TYPE, channel, id, error }, targetOrigin);\n    }\n    listen(window, targetOrigin) {\n        window.addEventListener(\"message\", (event) => {\n            if ((targetOrigin !== \"*\" && event.origin !== targetOrigin) ||\n                event.data['@rpc'] !== constants_1.CALL_TYPE)\n                return;\n            const { fn, args } = event.data;\n            if (!(fn in this.methods)) {\n                this.sendError(event, `RPC method '${fn}' is not defined`);\n                return;\n            }\n            try {\n                this.send(event, this.methods[fn](...args));\n            }\n            catch (error) {\n                this.sendError(event, error);\n            }\n        });\n    }\n}\nexports.default = Listener;\n//# sourceMappingURL=listener.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// This code runs inside the Ownable iframe. It's not part of the React app.\n// See `ownable-js.webpack.js`\n\n// @ts-ignore\nimport Listener from \"simple-iframe-rpc/listener\";\n\ntype Dict = { [prop: string]: any };\ntype StateDump = Array<[ArrayLike<number>, ArrayLike<number>]>;\ntype CosmWasmEvent = { type: string; attributes: Dict };\n\ninterface MessageInfo {\n  sender: string;\n  funds: ArrayLike<any>;\n}\n\ninterface Response {\n  attributes: Array<{ key: string; value: any }>;\n  events?: Array<{\n    type: string;\n    attributes: Array<{ key: string; value: any }>;\n  }>;\n  data?: string;\n}\n\nconst listener = new Listener({\n  init,\n  instantiate,\n  execute,\n  externalEvent,\n  query,\n  queryRaw,\n  refresh,\n});\nlistener.listen(window, \"*\");\n\nlet ownableId: string;\nlet worker: Worker;\n\nwindow.addEventListener(\"message\", (e) => {\n  if (e.origin !== \"null\" || \"@rpc\" in e.data) return;\n  window.parent.postMessage(e.data, \"*\");\n});\n\nfunction attributesToDict(\n  attributes: Array<{ key: string; value: any }>\n): Dict {\n  return Object.fromEntries(attributes.map((a) => [a.key, a.value]));\n}\n\nfunction init(id: string, javascript: string, wasm: Uint8Array): Promise<any> {\n  ownableId = id;\n\n  return new Promise(async (resolve, reject) => {\n    const blob = new Blob([javascript], { type: `application/javascript` });\n    const blobURL = URL.createObjectURL(blob);\n    worker = new Worker(blobURL, { type: \"module\" });\n\n    worker.onmessage = (event) => {\n      resolve(event.data);\n    };\n    worker.onerror = (err) => reject(err);\n    worker.onmessageerror = (err) => reject(err);\n\n    const buffer = wasm.buffer;\n    worker.postMessage(buffer, [buffer]);\n  });\n}\n\nfunction workerCall<T extends Response | string>(\n  type: string,\n  ownableId: string,\n  msg: Dict,\n  info: Dict,\n  state?: StateDump\n): Promise<{ response: T; state: StateDump }> {\n  return new Promise((resolve, reject) => {\n    if (!worker) {\n      reject(`Unable to ${type}: not initialized`);\n      return;\n    }\n\n    worker.addEventListener(\n      \"message\",\n      (event: MessageEvent<Map<string, any> | { err: any }>) => {\n        if (\"err\" in event.data) {\n          reject(\n            new Error(`Ownable ${type} failed`, { cause: event.data.err })\n          );\n          return;\n        }\n\n        const result = event.data.get(\"result\");\n        const response = JSON.parse(result);\n        const nextState: StateDump = event.data.has(\"mem\")\n          ? JSON.parse(event.data.get(\"mem\")).state_dump\n          : state;\n\n        resolve({ response, state: nextState });\n      },\n      { once: true }\n    );\n    worker.postMessage({\n      type,\n      ownable_id: ownableId,\n      msg,\n      info,\n      mem: { state_dump: state },\n    });\n  });\n}\n\nasync function instantiate(\n  msg: Dict,\n  info: Dict\n): Promise<{ attributes: Dict; state: StateDump }> {\n  const { response, state } = await workerCall<Response>(\n    \"instantiate\",\n    ownableId,\n    msg,\n    info\n  );\n\n  return { attributes: attributesToDict(response.attributes), state };\n}\n\nasync function execute(\n  msg: Dict,\n  info: MessageInfo,\n  state: StateDump\n): Promise<{\n  attributes: Dict;\n  events: Array<CosmWasmEvent>;\n  data?: string;\n  state: StateDump;\n}> {\n  const { response, state: newState } = await workerCall<Response>(\n    \"execute\",\n    ownableId,\n    msg,\n    info,\n    state\n  );\n  return executeResponse(response, newState);\n}\n\nasync function externalEvent(\n  msg: Dict,\n  messageInfo: MessageInfo,\n  state: StateDump\n): Promise<{\n  attributes: Dict;\n  events: Array<CosmWasmEvent>;\n  data?: string;\n  state: StateDump;\n}> {\n  const info = {\n    info: messageInfo,\n  };\n\n  const { response, state: newState } = await workerCall<Response>(\n    \"external_event\",\n    ownableId,\n    msg,\n    info,\n    state\n  );\n  return executeResponse(response, newState);\n}\n\nfunction executeResponse(\n  response: Response,\n  state: StateDump\n): {\n  attributes: Dict;\n  events: Array<CosmWasmEvent>;\n  data?: string;\n  state: StateDump;\n} {\n  return {\n    attributes: attributesToDict(response.attributes),\n    events: (response.events || []).map((event) => ({\n      type: event.type,\n      attributes: attributesToDict(event.attributes),\n    })),\n    data: response.data,\n    state,\n  };\n}\n\nasync function queryRaw(msg: Dict, state: StateDump): Promise<string> {\n  return (await workerCall<string>(\"query\", ownableId, msg, {}, state))\n    .response;\n}\n\nasync function query(msg: Dict, state: StateDump): Promise<any> {\n  const resultB64 = await queryRaw(msg, state);\n  return JSON.parse(atob(resultB64)) as Dict;\n}\n\nasync function refresh(state: StateDump): Promise<void> {\n  const widgetState: Dict = await query({ get_widget_state: {} }, state);\n\n  const iframe = document.getElementsByTagName(\"iframe\")[0];\n  iframe.contentWindow!.postMessage(\n    { ownable_id: ownableId, state: widgetState },\n    \"*\"\n  );\n}\n"],"names":["Object","defineProperty","exports","value","RESPONSE_TYPE","CALL_TYPE","constants_1","constructor","methods","this","send","event","resultOrPromise","Promise","resolve","then","result","sendResult","catch","error","sendError","channel","id","data","source","fallbackSource","targetOrigin","origin","postMessage","listen","window","addEventListener","fn","args","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","module","__webpack_modules__","r","Symbol","toStringTag","ownableId","worker","attributesToDict","attributes","fromEntries","map","a","key","workerCall","type","msg","info","state","reject","Error","cause","err","get","response","JSON","parse","nextState","has","state_dump","once","ownable_id","mem","executeResponse","events","async","queryRaw","query","resultB64","atob","Listener","init","javascript","wasm","blob","Blob","blobURL","URL","createObjectURL","Worker","onmessage","onerror","onmessageerror","buffer","instantiate","execute","newState","externalEvent","messageInfo","refresh","widgetState","get_widget_state","document","getElementsByTagName","contentWindow","e","parent"],"sourceRoot":""}